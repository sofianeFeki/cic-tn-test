{"version":3,"file":"static/js/971.386709c7.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","/**\n * Specifically match against false here as incomplete versions of\n * PointerEvents in very old browser might have it set as undefined.\n */\nconst isPrimaryPointer = (event) => event.isPrimary !== false;\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? (event) => isPrimaryPointer(event) && listener(event)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction isMouseEvent(event) {\n    return event.type !== \"pen\" && event.type !== \"touch\";\n}\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.0.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            if (!isPrimaryPointer(event))\n                return;\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            if (!isPrimaryPointer(event))\n                return;\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.0.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.0.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","isPrimary","extractEventInfo","pointType","point","wrapHandler","shouldFilterPrimaryPointer","listener","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","isMouseEvent","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","window","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","eventManagers","clear","passiveEffect","stop","Promise","resolve","stopAnimation","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","appearStoreId","currentTime","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","latest","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","setWithVelocity","timeout","checkElapsed","read","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","featureTests","waapi","Element","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_d","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}