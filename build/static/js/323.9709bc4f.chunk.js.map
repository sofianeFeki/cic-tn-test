{"version":3,"file":"static/js/323.9709bc4f.chunk.js","mappings":"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","sources":["components/pageProps/Breadcrumbs.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/send/send.js","pages/Contact/Contact.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { HiOutlineChevronRight } from \"react-icons/hi\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Breadcrumbs = ({ prevLocation, title }) => {\r\n  const location = useLocation();\r\n  const [locationPath, setLocationPath] = useState(\"\");\r\n  useEffect(() => {\r\n    setLocationPath(location.pathname.split(\"/\")[1]);\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className=\"w-full py-10 xl:py-10 flex flex-col gap-3\">\r\n      <h1 className=\"text-5xl text-primeColor font-titleFont font-bold\">\r\n        {title}\r\n      </h1>\r\n      <p className=\"text-sm font-normal text-lightText capitalize flex items-center\">\r\n        <span> {prevLocation === \"\" ? \"Home\" : prevLocation}</span>\r\n\r\n        <span className=\"px-1\">\r\n          <HiOutlineChevronRight />\r\n        </span>\r\n        <span className=\"capitalize font-semibold text-primeColor\">\r\n          {locationPath}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.11.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../components/pageProps/Breadcrumbs\";\r\nimport emailjs from \"@emailjs/browser\";\r\n\r\nconst Contact = () => {\r\n  const location = useLocation();\r\n  const [prevLocation, setPrevLocation] = useState(\"\");\r\n  useEffect(() => {\r\n    setPrevLocation(location.state.data);\r\n  }, [location]);\r\n\r\n  const [clientName, setclientName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [messages, setMessages] = useState(\"\");\r\n\r\n  // ========== Error Messages Start here ============\r\n  const [errClientName, setErrClientName] = useState(\"\");\r\n  const [errEmail, setErrEmail] = useState(\"\");\r\n  const [errMessages, setErrMessages] = useState(\"\");\r\n  // ========== Error Messages End here ==============\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n\r\n  const handleName = (e) => {\r\n    setclientName(e.target.value);\r\n    setErrClientName(\"\");\r\n  };\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    setErrEmail(\"\");\r\n  };\r\n  const handleMessages = (e) => {\r\n    setMessages(e.target.value);\r\n    setErrMessages(\"\");\r\n  };\r\n\r\n  // ================= Email Validation start here =============\r\n  const EmailValidation = (email) => {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i);\r\n  };\r\n  // ================= Email Validation End here ===============\r\n\r\n  const handlePost = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!clientName) {\r\n      setErrClientName(\"Enter your Name\");\r\n    }\r\n    if (!email) {\r\n      setErrEmail(\"Enter your Email\");\r\n    } else {\r\n      if (!EmailValidation(email)) {\r\n        setErrEmail(\"Enter a Valid Email\");\r\n      }\r\n    }\r\n    if (!messages) {\r\n      setErrMessages(\"Enter your Messages\");\r\n    }\r\n\r\n    if (clientName && email && EmailValidation(email) && messages) {\r\n      try {\r\n        // Send email using email.js\r\n        const emailResult = await emailjs.send(\r\n          \"service_8nstdw5\",\r\n          \"template_ndsalxz\",\r\n          {\r\n            to_name: \"Recipient Name\", // Update with recipient name\r\n            from_name: clientName,\r\n            form_email: email,\r\n            message: messages,\r\n          },\r\n          \"z5ibi5U1e-uDMgyLP\"\r\n        );\r\n\r\n        // Check the result of the email sending operation\r\n        console.log(emailResult.text);\r\n\r\n        // Update state to show success message\r\n        setSuccessMsg(\r\n          `Thank you dear ${clientName}, Your message has been received successfully. Further details will be sent to you by email at ${email}.`\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error sending email:\", error);\r\n        // Handle error and update state accordingly\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-container mx-auto px-4\">\r\n      <Breadcrumbs title=\"Contact\" prevLocation={prevLocation} />\r\n      {successMsg ? (\r\n        <p className=\"pb-20 w-96 font-medium text-green-500\">{successMsg}</p>\r\n      ) : (\r\n        <form className=\"pb-20\">\r\n          <h1 className=\"font-titleFont font-semibold text-3xl\">\r\n            Fill up a Form\r\n          </h1>\r\n          <div className=\"w-[500px] h-auto py-6 flex flex-col gap-6\">\r\n            <div>\r\n              <p className=\"text-base font-titleFont font-semibold px-2\">\r\n                Name\r\n              </p>\r\n              <input\r\n                onChange={handleName}\r\n                value={clientName}\r\n                className=\"w-full py-1 border-b-2 px-2 text-base font-medium placeholder:font-normal placeholder:text-sm outline-none focus-within:border-primeColor\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your name here\"\r\n                name=\"from_name\"\r\n              />\r\n              {errClientName && (\r\n                <p className=\"text-red-500 text-sm font-titleFont font-semibold mt-1 px-2 flex items-center gap-1\">\r\n                  <span className=\"text-sm italic font-bold\">!</span>\r\n                  {errClientName}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <p className=\"text-base font-titleFont font-semibold px-2\">\r\n                Email\r\n              </p>\r\n              <input\r\n                onChange={handleEmail}\r\n                value={email}\r\n                className=\"w-full py-1 border-b-2 px-2 text-base font-medium placeholder:font-normal placeholder:text-sm outline-none focus-within:border-primeColor\"\r\n                type=\"email\"\r\n                placeholder=\"Enter your name here\"\r\n                name=\"form_email\"\r\n              />\r\n              {errEmail && (\r\n                <p className=\"text-red-500 text-sm font-titleFont font-semibold mt-1 px-2 flex items-center gap-1\">\r\n                  <span className=\"text-sm italic font-bold\">!</span>\r\n                  {errEmail}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <p className=\"text-base font-titleFont font-semibold px-2\">\r\n                Messages\r\n              </p>\r\n              <textarea\r\n                onChange={handleMessages}\r\n                value={messages}\r\n                cols=\"30\"\r\n                rows=\"3\"\r\n                className=\"w-full py-1 border-b-2 px-2 text-base font-medium placeholder:font-normal placeholder:text-sm outline-none focus-within:border-primeColor resize-none\"\r\n                type=\"text\"\r\n                placeholder=\"Enter your name here\"\r\n                name=\"message\"\r\n              ></textarea>\r\n              {errMessages && (\r\n                <p className=\"text-red-500 text-sm font-titleFont font-semibold mt-1 px-2 flex items-center gap-1\">\r\n                  <span className=\"text-sm italic font-bold\">!</span>\r\n                  {errMessages}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={handlePost}\r\n              className=\"w-44 bg-primeColor text-gray-200 h-10 font-titleFont text-base tracking-wide font-semibold hover:bg-black hover:text-white duration-200\"\r\n            >\r\n              Post\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["prevLocation","title","location","useLocation","useState","locationPath","setLocationPath","useEffect","pathname","split","className","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","_userID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","setPrevLocation","state","clientName","setclientName","email","setEmail","messages","setMessages","errClientName","setErrClientName","errEmail","setErrEmail","errMessages","setErrMessages","successMsg","setSuccessMsg","EmailValidation","String","toLowerCase","match","handlePost","e","preventDefault","emailjs","to_name","from_name","form_email","message","emailResult","console","log","error","Breadcrumbs","onChange","value","type","placeholder","name","cols","rows","onClick"],"sourceRoot":""}